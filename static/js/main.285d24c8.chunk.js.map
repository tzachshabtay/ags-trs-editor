{"version":3,"sources":["context.js","line.js","trsFile.js","toolbar.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","trimStart","str","replace","Line","props","focus","input","onLineChanged","e","context","lines","index","target","value","setState","to","onFocus","focused","state","this","from","Grid","container","alignItems","direction","spacing","style","marginTop","item","xs","TextField","label","placeholder","multiline","margin","fullWidth","onChange","inputRef","Component","contextType","File","onSearch","text","searchVisualToReal","searchRealToVisual","mappingIndex","entries","line","includes","getTo","search","searchText","undefined","rowRenderer","key","isScrolling","isVisible","l","count","Object","keys","length","paddingLeft","paddingTop","paddingBottom","height","flexGrow","width","rowCount","rowHeight","ref","list","ColorLinearProgress","withStyles","colorPrimary","backgroundColor","barColorPrimary","LinearProgress","AGSToolbar","getAt","isMissing","trackProgress","full","setTimeout","getFocused","focusLine","findNext","filter","current","cursor","len","scrollToRow","findPrev","onNextClicked","onPreviousClicked","onNextMissingClicked","onPreviousMissingClicked","genFile","comments","download","element","document","createElement","file","Blob","type","href","URL","createObjectURL","body","appendChild","click","upload","searchValue","AppBar","position","Toolbar","Typography","variant","paddingRight","Tooltip","title","aria-label","IconButton","edge","color","onClick","marginRight","onCancelSearch","loading","CircularProgress","renderProgress","percent","Math","round","progress","AppContainer","Provider","App","startUpload","fileInput","display","onchange","files","reader","FileReader","onload","contents","result","func","removeChild","readAsText","onUploaded","split","startsWith","push","Array","forceUpdateGrid","forceUpdate","className","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.285d24c8.chunk.js","sourcesContent":["import React from 'react';\n\nexport const AppContext = React.createContext({});","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { AppContext } from './context';\n\nconst trimStart = (str) => {\n    // NOTE String.trimStart is available on Firefox 61\n    return str.replace(/^\\s+/, '');\n};\n\nexport default class Line extends React.Component {\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = { to: props.to };\n    }\n\n    componentDidMount() {\n        this.context.lines[this.props.index] = this.state.to;\n        this.context.focus[this.props.index] = this.focus;\n    }\n\n    componentWillUnmount() {\n        this.context.focus[this.props.index] = null;\n    }\n\n    focus = () => {\n        if (this.input) {\n            this.input.focus();\n        }\n    }\n\n    onLineChanged = (e) => {\n        this.context.lines[this.props.index] = e.target.value;\n        this.setState({ to: e.target.value });\n    }\n\n    onFocus = (e) => {\n        this.context.focused = this.props.index;\n    }\n\n    render() {\n        let from = trimStart(this.props.from);\n        let to = this.state.to ? trimStart(this.state.to) : \"\";\n        return (<Grid container alignItems=\"center\" direction=\"row\" spacing={0} style={{ marginTop: 5 }}>\n            <Grid item xs={1}>\n                <span>{this.props.index + 1}</span>\n            </Grid>\n            <Grid item xs={11}>\n                <TextField\n                    label={from}\n                    placeholder=\"Missing translation\"\n                    multiline\n                    margin=\"normal\"\n                    fullWidth\n                    value={to}\n                    onChange={this.onLineChanged}\n                    onFocus={this.onFocus}\n                    inputRef={input => { if (input) this.input = input; }}\n                />\n            </Grid>\n        </Grid>)\n    }\n}","import React from 'react';\nimport Line from './line';\nimport List from 'react-virtualized/dist/commonjs/List';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport { AppContext } from './context';\n\nexport default class File extends React.Component {\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = { search: null, searchText: \"\" };\n    }\n\n    render() {\n        this.context.onSearch = this.onSearch;\n        const count = this.state.search ? Object.keys(this.state.search).length : this.props.lines.length;\n        return (\n            <div style={{ paddingLeft: 10, paddingTop: 60, paddingBottom: 10, height: \"100%\", flexGrow: 1 }} >\n                <AutoSizer>\n                    {({ height, width }) => (\n                        <List\n                            key={this.state.searchText}\n                            width={width}\n                            height={height}\n                            rowCount={count}\n                            rowHeight={80}\n                            rowRenderer={this.rowRenderer}\n                            ref={(ref) => { if (ref) this.context.list = ref; }}\n                            style={{ paddingBottom: 10 }}\n                        />\n                    )}\n                </AutoSizer>\n            </div>)\n    }\n\n    onSearch = (text) => {\n        if (!text) {\n            this.setState({ search: null, searchText: \"\" });\n        } else {\n            const searchVisualToReal = {};\n            const searchRealToVisual = {};\n            let mappingIndex = 0;\n            for (const [index, line] of this.props.lines.entries()) {\n                if (line.from.includes(text) || this.getTo(line).includes(text)) {\n                    searchVisualToReal[mappingIndex] = index;\n                    searchRealToVisual[index] = mappingIndex;\n                    mappingIndex += 1;\n                }\n            }\n            this.context.searchRealToVisual = searchRealToVisual;\n            this.context.searchVisualToReal = searchVisualToReal;\n            this.setState({ search: searchVisualToReal, searchText: text });\n        }\n    }\n\n    getTo = (line) => {\n        const to = this.context.lines[line.index];\n        if (to === undefined) {\n            return line.to;\n        }\n        return to;\n    }\n\n    rowRenderer = ({\n        key, // Unique key within array of rows\n        index, // Index of row within collection\n        isScrolling, // The List is currently being scrolled\n        isVisible, // This row is visible within the List (eg it is not an over-scanned row)\n        style, // Style object to be applied to row (to position it)\n    }) => {\n        if (this.state.search) {\n            index = this.state.search[index];\n        }\n        const l = this.props.lines[index];\n        let to = this.context.lines[index];\n        if (to === undefined) {\n            to = l.to;\n        }\n        return (\n            <div key={key} style={style}>\n                <Line from={l.from} to={to} index={index}></Line>\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport SearchBar from 'material-ui-search-bar'\nimport { withStyles } from '@material-ui/core/styles';\nimport { AppContext } from './context';\n\nconst ColorLinearProgress = withStyles({\n    colorPrimary: {\n        backgroundColor: 'darkblue',\n    },\n    barColorPrimary: {\n        backgroundColor: 'lightblue',\n    },\n})(LinearProgress);\n\n\nexport default class AGSToolbar extends React.Component {\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = { searchValue: \"\" };\n    }\n\n    componentDidMount() {\n        setTimeout(this.trackProgress, 500);\n    }\n\n    getAt = (index) => {\n        if (this.context.searchVisualToReal) {\n            index = this.context.searchVisualToReal[index];\n        }\n        return this.props.lines[index];\n    }\n\n    getTo = (line) => {\n        const to = this.context.lines[line.index];\n        if (to === undefined) {\n            return line.to;\n        }\n        return to;\n    }\n\n    isMissing = (line) => {\n        if (!this.isVisible(line)) return false;\n        return !this.getTo(line);\n    }\n\n    isVisible = (line) => {\n        if (!this.context.searchRealToVisual) return true;\n        return line.index in this.context.searchRealToVisual;\n    }\n\n    trackProgress = () => {\n        if (this.props.lines && this.context.lines) {\n            let full = 0;\n            for (const line of this.props.lines) {\n                if (!this.isMissing(line)) full += 1;\n            }\n            this.setState({ full });\n        }\n        setTimeout(this.trackProgress, 500);\n    }\n\n    getFocused = () => {\n        if (this.context.searchRealToVisual) {\n            return this.context.searchRealToVisual[this.context.focused] || -1;\n        }\n        return this.context.focused || -1;\n    }\n\n    focusLine = (line) => {\n        if (line.index in this.context.focus) {\n            this.context.focus[line.index]();\n        }\n    }\n\n    findNext = (filter) => {\n        let current = this.getFocused();\n        if (current < 0) {\n            current = 0;\n        }\n        let cursor = current;\n        let len = this.props.lines.length;\n        if (this.context.searchRealToVisual) {\n            len = Object.keys(this.context.searchRealToVisual).length;\n        }\n        while (true) {\n            cursor = (cursor + 1) % len;\n            const line = this.getAt(cursor);\n            if (filter(line) || cursor === current) {\n                if (cursor >= len - 1) {\n                    cursor = len - 2;\n                }\n                if (cursor < 0) {\n                    cursor = -1;\n                }\n                this.context.list.scrollToRow(cursor + 1);\n                setTimeout(() => {\n                    this.focusLine(line);\n                }, 100);\n                break;\n            }\n        }\n    }\n\n    findPrev = (filter) => {\n        let current = this.getFocused();\n        let len = this.props.lines.length;\n        if (this.context.searchRealToVisual) {\n            len = Object.keys(this.context.searchRealToVisual).length;\n        }\n        if (current < 0) {\n            current = len - 1;\n        }\n        let cursor = current;\n        while (true) {\n            cursor = (cursor - 1) % len;\n            if (cursor < 0) {\n                cursor = len - 1;\n            }\n            const line = this.getAt(cursor);\n            if (filter(line) || cursor === current) {\n                if (cursor <= 0) {\n                    cursor = 1;\n                }\n                this.context.list.scrollToRow(cursor - 1);\n                setTimeout(() => {\n                    this.focusLine(line);\n                }, 100);\n                break;\n            }\n        }\n    }\n\n    onNextClicked = () => {\n        this.findNext(this.isVisible);\n    }\n\n    onPreviousClicked = () => {\n        this.findPrev(this.isVisible);\n    }\n\n    onNextMissingClicked = () => {\n        this.findNext(this.isMissing);\n    }\n\n    onPreviousMissingClicked = () => {\n        this.findPrev(this.isMissing);\n    }\n\n    genFile = () => {\n        let text = `${this.props.comments}\\r\\n`;\n        for (const line of this.props.lines) {\n            text += `${line.from}\\r\\n${this.getTo(line) || \"\"}\\r\\n`;\n        }\n        this.download(text);\n    }\n\n    download = (text) => {\n        //https://stackoverflow.com/questions/44656610/download-a-string-as-txt-file-in-react/44661948\n        const element = document.createElement(\"a\");\n        const file = new Blob([text], { type: 'text/plain' });\n        element.href = URL.createObjectURL(file);\n        element.download = \"ags.trs\";\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click();\n    }\n\n    upload = () => {\n        this.props.upload();\n    }\n\n    onSearch = (text) => {\n        this.setState({ searchValue: text });\n        setTimeout(() => {\n            if (this.state.searchValue === text) {\n                this.context.onSearch(text);\n            }\n        }, 200);\n    }\n\n    render() {\n        return (\n            <>\n                <AppBar position=\"fixed\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" style={{ paddingRight: 50 }}>\n                            AGS TRS Editor\n                        </Typography>\n                        <Tooltip title=\"Load\" aria-label=\"load\">\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={this.upload}>\n                                <CloudUploadIcon />\n                            </IconButton>\n                        </Tooltip>\n                        {this.props.lines && (\n                            <>\n                                <Tooltip title=\"Save\" aria-label=\"save\">\n                                    <IconButton edge=\"start\" color=\"inherit\" onClick={this.genFile} style={{ marginRight: 50 }}>\n                                        <CloudDownloadIcon />\n                                    </IconButton>\n                                </Tooltip>\n\n                                <Tooltip title=\"Previous missing line\" aria-label=\"previous missing line\">\n                                    <IconButton edge=\"start\" color=\"inherit\" onClick={this.onPreviousMissingClicked}>\n                                        <SkipPreviousIcon />\n                                    </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"Previous line (SHIFT + TAB)\" aria-label=\"previous line\">\n                                    <IconButton edge=\"start\" color=\"inherit\" onClick={this.onPreviousClicked}>\n                                        <ChevronLeftIcon />\n                                    </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"Next line (TAB)\" aria-label=\"next line\">\n                                    <IconButton edge=\"start\" color=\"inherit\" onClick={this.onNextClicked}>\n                                        <ChevronRightIcon />\n                                    </IconButton>\n                                </Tooltip >\n                                <Tooltip title=\"Next missing line\" aria-label=\"next missing line\">\n                                    <IconButton edge=\"start\" color=\"inherit\" onClick={this.onNextMissingClicked}>\n                                        <SkipNextIcon />\n                                    </IconButton>\n                                </Tooltip >\n                                <SearchBar value={this.state.searchValue} style={{ paddingLeft: 20 }}\n                                    onChange={this.onSearch} onCancelSearch={() => this.onSearch(\"\")} />\n                            </>\n                        )}\n                        {this.props.loading && (<CircularProgress />)}\n                        <div style={{ flexGrow: 1 }} />\n                        <Tooltip title=\"Source Code\" aria-label=\"source code\">\n                            <IconButton color=\"inherit\" target=\"_blank\" href=\"https://github.com/tzachshabtay/ags-trs-editor/\">\n                                <GitHubIcon />\n                            </IconButton>\n                        </Tooltip >\n                    </Toolbar >\n                    {this.renderProgress()}\n                </AppBar >\n            </>\n        )\n    }\n\n    renderProgress() {\n        if (!this.props.lines) {\n            return null;\n        }\n        const full = this.state ? this.state.full || 0 : 0;\n        const percent = Math.round((full / this.props.lines.length) * 100);\n        const progress = `${full}/${this.props.lines.length} Completed (${percent}%)`\n        return (\n            <Tooltip title={progress} aria-label=\"progress\">\n                <ColorLinearProgress variant=\"determinate\" value={percent} />\n            </Tooltip>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport File from './trsFile';\nimport AGSToolbar from './toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { AppContext } from './context';\n\nclass AppContainer extends React.Component {\n  render() {\n    return (\n      <AppContext.Provider value={{ focus: {} }}>\n        <App />\n      </AppContext.Provider>\n    );\n  }\n}\n\nclass App extends React.Component {\n  static contextType = AppContext;\n  render() {\n    return (\n      <div className=\"App\" style={{ height: \"100%\" }}>\n        <AGSToolbar lines={this.state && this.state.lines} comments={this.state && this.state.comments} upload={this.startUpload} loading={this.state && this.state.loading} />\n        {this.state && this.state.lines && <File lines={this.state.lines} comments={this.state.comments} />}\n        {(!this.state || !this.state.lines) && <Typography style={{ paddingTop: 100, paddingLeft: 50 }}>Please load a TRS file.</Typography>}\n      </div>\n    );\n  }\n\n  startUpload = () => {\n    this.setState({ loading: true }, this.upload);\n  }\n\n  upload = () => {\n    //https://stackoverflow.com/questions/3582671/how-to-open-a-local-disk-file-with-javascript\n    const readFile = function (e) {\n      var file = e.target.files[0];\n      if (!file) {\n        return;\n      }\n      var reader = new FileReader();\n      reader.onload = function (e) {\n        var contents = e.target.result;\n        fileInput.func(contents)\n        document.body.removeChild(fileInput)\n      }\n      reader.readAsText(file)\n    }\n    const fileInput = document.createElement(\"input\")\n    fileInput.type = 'file'\n    fileInput.style.display = 'none'\n    fileInput.onchange = readFile\n    fileInput.func = this.onUploaded\n    document.body.appendChild(fileInput)\n    fileInput.click()\n  }\n\n  onUploaded = (contents) => {\n    const lines = contents.replace(/\\r/g, \"\").split(\"\\n\");\n    let result = [];\n    let from = null;\n    let to = null;\n    let comments = \"\";\n    let index = 0;\n    for (const line of lines) {\n      if (line.startsWith(\"//\")) {\n        comments = `${comments}\\r\\n${line}`;\n      } else if (from === null) {\n        from = line;\n      } else if (to === null) {\n        to = line;\n      } else {\n        result.push({ from, to, index });\n        index += 1;\n        from = line;\n        to = null;\n      }\n    }\n    if (from) {\n      result.push({ from, to, index });\n      index += 1;\n    }\n    this.context.lines = new Array(result.length);\n    this.setState({ lines: result, comments }, () => {\n      if (this.context.list) {\n        setTimeout(() => {\n          this.context.list.forceUpdateGrid();\n          this.context.list.forceUpdate();\n          this.context.list.scrollToRow(0);\n        }, 500);\n      }\n    });\n  }\n}\n\nexport default AppContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}